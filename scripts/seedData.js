// Generated by OpenAI's GPT-4.o
const mongoose = require("mongoose");
const dotenv = require("dotenv");
const Car = require("../models/carsModel");
const Driver = require("../models/driverModel");
const Maintenance = require("../models/maintenanceModel");
const Category = require("../models/categoryModel");
const SubCategory = require("../models/subCategoryModel");

dotenv.config();

mongoose
  .connect(process.env.MONGO_URI, {
    serverSelectionTimeoutMS: 30000,
    socketTimeoutMS: 45000,
  })
  .then(() => console.log("Connected to MongoDB for seeding..."))
  .catch((err) => {
    console.error("MongoDB connection error:", err);
    process.exit(1);
  });

const categories = [
  { name: "Engine" },
  { name: "Transmission" },
  { name: "Brakes" },
  { name: "Electrical" },
  { name: "Suspension" },
  { name: "Cooling System" },
  { name: "Fuel System" },
  { name: "Exhaust" },
  { name: "Interior" },
  { name: "Exterior" },
];

const subCategories = [
  { name: "Oil Change", description: "Regular oil and filter change" },
  { name: "Spark Plugs", description: "Replace spark plugs" },
  { name: "Air Filter", description: "Replace engine air filter" },
  { name: "Timing Belt", description: "Replace timing belt/chain" },
  { name: "Engine Tune-up", description: "Complete engine tune-up service" },

  { name: "Transmission Fluid", description: "Change transmission fluid" },
  { name: "Clutch Repair", description: "Repair or replace clutch" },
  { name: "Transmission Filter", description: "Replace transmission filter" },
  { name: "Gearbox Repair", description: "Repair manual or automatic gearbox" },

  { name: "Brake Pads", description: "Replace brake pads" },
  { name: "Brake Discs", description: "Replace brake discs/rotors" },
  { name: "Brake Fluid", description: "Replace brake fluid" },
  { name: "ABS Sensors", description: "Replace or repair ABS sensors" },

  { name: "Battery Replacement", description: "Replace car battery" },
  { name: "Alternator", description: "Repair or replace alternator" },
  { name: "Starter Motor", description: "Repair or replace starter motor" },
  {
    name: "Light Bulbs",
    description: "Replace headlights or other light bulbs",
  },

  { name: "Shock Absorbers", description: "Replace shock absorbers" },
  { name: "Suspension Springs", description: "Replace suspension springs" },
  { name: "Wheel Alignment", description: "Perform wheel alignment" },
  { name: "Ball Joints", description: "Replace ball joints" },

  { name: "Radiator Repair", description: "Repair or replace radiator" },
  { name: "Coolant Flush", description: "Flush and replace coolant" },
  { name: "Water Pump", description: "Replace water pump" },
  { name: "Thermostat", description: "Replace thermostat" },

  { name: "Fuel Filter", description: "Replace fuel filter" },
  { name: "Fuel Pump", description: "Replace fuel pump" },
  { name: "Injector Cleaning", description: "Clean fuel injectors" },
  { name: "Carburetor Adjustment", description: "Adjust carburetor settings" },

  { name: "Exhaust Pipe", description: "Repair or replace exhaust pipe" },
  { name: "Muffler", description: "Replace muffler" },
  { name: "Catalytic Converter", description: "Replace catalytic converter" },
  {
    name: "Exhaust Manifold",
    description: "Repair or replace exhaust manifold",
  },

  { name: "Seat Repair", description: "Repair car seats" },
  { name: "Dashboard Repair", description: "Repair dashboard components" },
  { name: "AC Service", description: "Service air conditioning system" },
  { name: "Audio System", description: "Repair or upgrade audio system" },

  { name: "Paint Touch-up", description: "Touch up paint scratches" },
  { name: "Windshield Repair", description: "Repair or replace windshield" },
  { name: "Body Repair", description: "Repair body damage" },
  { name: "Rust Treatment", description: "Treat and prevent rust" },
];

const drivers = [
  {
    name: "John Smith",
    phoneNumber: "123-456-7890",
    nationalId: "ABC123456",
    licenseNumber: "DL98765",
    address: "123 Main St, Anytown",
  },
  {
    name: "Sarah Johnson",
    phoneNumber: "234-567-8901",
    nationalId: "DEF234567",
    licenseNumber: "DL87654",
    address: "456 Oak Ave, Somewhere",
  },
  {
    name: "Michael Brown",
    phoneNumber: "345-678-9012",
    nationalId: "GHI345678",
    licenseNumber: "DL76543",
    address: "789 Pine Rd, Elsewhere",
  },
  {
    name: "Emily Davis",
    phoneNumber: "456-789-0123",
    nationalId: "JKL456789",
    licenseNumber: "DL65432",
    address: "321 Cedar St, Anywhere",
  },
];

const cars = [
  {
    plateNumber: "ABC1234",
    brand: "Toyota",
    model: "Camry",
    year: 2020,
    color: "Silver",
    status: "available",
  },
  {
    plateNumber: "DEF5678",
    brand: "Honda",
    model: "Civic",
    year: 2019,
    color: "Blue",
    status: "available",
  },
  {
    plateNumber: "GHI9012",
    brand: "Ford",
    model: "F-150",
    year: 2021,
    color: "Red",
    status: "available",
  },
  {
    plateNumber: "JKL3456",
    brand: "Chevrolet",
    model: "Malibu",
    year: 2018,
    color: "Black",
    status: "available",
  },
];

const seedData = async () => {
  try {
    await Car.deleteMany({});
    await Driver.deleteMany({});
    await Maintenance.deleteMany({});
    await Category.deleteMany({});
    await SubCategory.deleteMany({});

    console.log("All collections cleared");

    // Insert categories
    const createdCategories = await Category.insertMany(categories);
    console.log("\n--- CATEGORIES INSERTED ---");
    createdCategories.forEach((category) => {
      console.log(`- ${category.name} (ID: ${category._id})`);
    });

    // Assign subcategories to their respective categories and prepare mapping for later display
    const subcategoryMapping = {};
    const categoryMapping = {};

    createdCategories.forEach((category) => {
      categoryMapping[category._id] = category.name;
    });

    // Engine subcategories (index 0)
    subCategories[0].category = createdCategories[0]._id; // Oil Change
    subCategories[1].category = createdCategories[0]._id; // Spark Plugs
    subCategories[2].category = createdCategories[0]._id; // Air Filter
    subCategories[3].category = createdCategories[0]._id; // Timing Belt
    subCategories[4].category = createdCategories[0]._id; // Engine Tune-up

    // Transmission subcategories (index 1)
    subCategories[5].category = createdCategories[1]._id; // Transmission Fluid
    subCategories[6].category = createdCategories[1]._id; // Clutch Repair
    subCategories[7].category = createdCategories[1]._id; // Transmission Filter
    subCategories[8].category = createdCategories[1]._id; // Gearbox Repair

    // Brakes subcategories (index 2)
    subCategories[9].category = createdCategories[2]._id; // Brake Pads
    subCategories[10].category = createdCategories[2]._id; // Brake Discs
    subCategories[11].category = createdCategories[2]._id; // Brake Fluid
    subCategories[12].category = createdCategories[2]._id; // ABS Sensors

    // Electrical subcategories (index 3)
    subCategories[13].category = createdCategories[3]._id; // Battery Replacement
    subCategories[14].category = createdCategories[3]._id; // Alternator
    subCategories[15].category = createdCategories[3]._id; // Starter Motor
    subCategories[16].category = createdCategories[3]._id; // Light Bulbs

    // Suspension subcategories (index 4)
    subCategories[17].category = createdCategories[4]._id; // Shock Absorbers
    subCategories[18].category = createdCategories[4]._id; // Suspension Springs
    subCategories[19].category = createdCategories[4]._id; // Wheel Alignment
    subCategories[20].category = createdCategories[4]._id; // Ball Joints

    // Cooling System subcategories (index 5)
    subCategories[21].category = createdCategories[5]._id; // Radiator Repair
    subCategories[22].category = createdCategories[5]._id; // Coolant Flush
    subCategories[23].category = createdCategories[5]._id; // Water Pump
    subCategories[24].category = createdCategories[5]._id; // Thermostat

    // Fuel System subcategories (index 6)
    subCategories[25].category = createdCategories[6]._id; // Fuel Filter
    subCategories[26].category = createdCategories[6]._id; // Fuel Pump
    subCategories[27].category = createdCategories[6]._id; // Injector Cleaning
    subCategories[28].category = createdCategories[6]._id; // Carburetor Adjustment

    // Exhaust subcategories (index 7)
    subCategories[29].category = createdCategories[7]._id; // Exhaust Pipe
    subCategories[30].category = createdCategories[7]._id; // Muffler
    subCategories[31].category = createdCategories[7]._id; // Catalytic Converter
    subCategories[32].category = createdCategories[7]._id; // Exhaust Manifold

    // Interior subcategories (index 8)
    subCategories[33].category = createdCategories[8]._id; // Seat Repair
    subCategories[34].category = createdCategories[8]._id; // Dashboard Repair
    subCategories[35].category = createdCategories[8]._id; // AC Service
    subCategories[36].category = createdCategories[8]._id; // Audio System

    // Exterior subcategories (index 9)
    subCategories[37].category = createdCategories[9]._id; // Paint Touch-up
    subCategories[38].category = createdCategories[9]._id; // Windshield Repair
    subCategories[39].category = createdCategories[9]._id; // Body Repair
    subCategories[40].category = createdCategories[9]._id; // Rust Treatment

    // Insert subcategories
    const createdSubCategories = await SubCategory.insertMany(subCategories);

    // Build subcategory mapping
    createdSubCategories.forEach((subcat) => {
      subcategoryMapping[subcat._id] = {
        name: subcat.name,
        category: categoryMapping[subcat.category],
      };
    });

    // Display subcategories grouped by category
    console.log("\n--- SUBCATEGORIES INSERTED ---");
    for (const category of createdCategories) {
      console.log(`\nCategory: ${category.name}`);
      const categorySubcategories = createdSubCategories.filter(
        (sc) => sc.category.toString() === category._id.toString()
      );

      categorySubcategories.forEach((sc) => {
        console.log(`- ${sc.name}: ${sc.description}`);
      });
    }

    // Update categories with subcategory references
    for (const subCategory of createdSubCategories) {
      await Category.findByIdAndUpdate(subCategory.category, {
        $push: { subCategories: subCategory._id },
      });
    }
    console.log("\nCategories updated with subcategory references");

    // Insert drivers
    const createdDrivers = await Driver.insertMany(drivers);
    console.log("\n--- DRIVERS INSERTED ---");
    createdDrivers.forEach((driver) => {
      console.log(
        `- ${driver.name} (Phone: ${driver.phoneNumber}, License: ${driver.licenseNumber})`
      );
    });

    // Build driver mapping
    const driverMapping = {};
    createdDrivers.forEach((driver) => {
      driverMapping[driver._id] = driver.name;
    });

    // Insert cars and assign to drivers
    for (let i = 0; i < cars.length; i++) {
      if (i < createdDrivers.length) {
        cars[i].driver = createdDrivers[i]._id;
      }
    }

    const createdCars = await Car.insertMany(cars);

    // Build car mapping
    const carMapping = {};
    createdCars.forEach((car) => {
      carMapping[car._id] = `${car.brand} ${car.model} (${car.plateNumber})`;
    });

    console.log("\n--- CARS INSERTED ---");
    createdCars.forEach((car) => {
      const driverName = car.driver ? driverMapping[car.driver] : "None";
      console.log(
        `- ${car.brand} ${car.model} (${car.year}, ${car.color}), Plate: ${car.plateNumber}, Driver: ${driverName}`
      );
    });

    // Update drivers with car references
    for (let i = 0; i < createdDrivers.length; i++) {
      if (i < createdCars.length) {
        await Driver.findByIdAndUpdate(createdDrivers[i]._id, {
          car: createdCars[i]._id,
        });
      }
    }
    console.log("\nDrivers updated with car references");

    // Create maintenance records with various subcategories
    const maintenanceRecords = [
      // Previous maintenance records
      {
        car: createdCars[0]._id,
        driver: createdCars[0].driver,
        subCategories: [
          createdSubCategories[0]._id, // Oil Change
          createdSubCategories[2]._id, // Air Filter
        ],
        description:
          "Regular maintenance - oil change and air filter replacement",
        const: 120,
        date: new Date("2024-10-15"),
      },
      {
        car: createdCars[1]._id,
        driver: createdCars[1].driver,
        subCategories: [
          createdSubCategories[9]._id, // Brake Pads
          createdSubCategories[10]._id, // Brake Discs
        ],
        description: "Complete brake system overhaul - replaced pads and discs",
        const: 320,
        date: new Date("2024-11-05"),
      },
      {
        car: createdCars[2]._id,
        driver: createdCars[2].driver,
        subCategories: [
          createdSubCategories[13]._id, // Battery Replacement
          createdSubCategories[14]._id, // Alternator
        ],
        description:
          "Electrical system maintenance - replaced battery and alternator",
        const: 450,
        date: new Date("2024-11-20"),
      },
      {
        car: createdCars[3]._id,
        driver: createdCars[3].driver,
        subCategories: [
          createdSubCategories[22]._id, // Coolant Flush
          createdSubCategories[23]._id, // Water Pump
          createdSubCategories[35]._id, // AC Service
        ],
        description: "Cooling system maintenance and AC service",
        const: 380,
        date: new Date("2024-12-10"),
      },
      {
        car: createdCars[0]._id,
        driver: createdCars[0].driver,
        subCategories: [
          createdSubCategories[27]._id, // Injector Cleaning
          createdSubCategories[17]._id, // Shock Absorbers
        ],
        description:
          "Performance improvement - injector cleaning and shock absorber replacement",
        const: 290,
        date: new Date("2025-01-05"),
      },
      {
        car: createdCars[1]._id,
        driver: createdCars[1].driver,
        subCategories: [
          createdSubCategories[38]._id, // Windshield Repair
          createdSubCategories[37]._id, // Paint Touch-up
        ],
        description:
          "Exterior repairs - windshield crack repair and paint touch-up",
        const: 210,
        date: new Date("2025-02-15"),
      },

      // Additional maintenance records with more detailed histories
      // Toyota Camry (Car 0) maintenance records
      {
        car: createdCars[0]._id,
        driver: createdCars[0].driver,
        subCategories: [
          createdSubCategories[1]._id, // Spark Plugs
          createdSubCategories[4]._id, // Engine Tune-up
        ],
        description: "Major engine tune-up with spark plug replacement",
        const: 280,
        date: new Date("2024-07-12"),
      },
      {
        car: createdCars[0]._id,
        driver: createdCars[0].driver,
        subCategories: [
          createdSubCategories[11]._id, // Brake Fluid
          createdSubCategories[12]._id, // ABS Sensors
        ],
        description:
          "Brake system maintenance - fluid flush and ABS sensor replacement",
        const: 195,
        date: new Date("2024-08-28"),
      },
      {
        car: createdCars[0]._id,
        driver: createdCars[0].driver,
        subCategories: [
          createdSubCategories[19]._id, // Wheel Alignment
          createdSubCategories[20]._id, // Ball Joints
        ],
        description:
          "Suspension work - wheel alignment and ball joint replacement",
        const: 350,
        date: new Date("2024-12-03"),
      },
      {
        car: createdCars[0]._id,
        driver: createdCars[0].driver,
        subCategories: [
          createdSubCategories[31]._id, // Catalytic Converter
          createdSubCategories[30]._id, // Muffler
        ],
        description:
          "Exhaust system repairs - catalytic converter and muffler replacement",
        const: 780,
        date: new Date("2025-02-20"),
      },

      // Honda Civic (Car 1) maintenance records
      {
        car: createdCars[1]._id,
        driver: createdCars[1].driver,
        subCategories: [
          createdSubCategories[5]._id, // Transmission Fluid
          createdSubCategories[7]._id, // Transmission Filter
        ],
        description: "Transmission service - fluid and filter change",
        const: 220,
        date: new Date("2024-08-10"),
      },
      {
        car: createdCars[1]._id,
        driver: createdCars[1].driver,
        subCategories: [
          createdSubCategories[25]._id, // Fuel Filter
          createdSubCategories[27]._id, // Injector Cleaning
        ],
        description:
          "Fuel system maintenance - filter replacement and injector cleaning",
        const: 185,
        date: new Date("2024-10-22"),
      },
      {
        car: createdCars[1]._id,
        driver: createdCars[1].driver,
        subCategories: [createdSubCategories[35]._id], // AC Service
        description: "Air conditioning system recharge and leak repair",
        const: 150,
        date: new Date("2025-01-15"),
      },
      {
        car: createdCars[1]._id,
        driver: createdCars[1].driver,
        subCategories: [
          createdSubCategories[16]._id, // Light Bulbs
          createdSubCategories[15]._id, // Starter Motor
        ],
        description:
          "Electrical repairs - headlight replacement and starter motor repair",
        const: 310,
        date: new Date("2025-03-08"),
      },

      // Ford F-150 (Car 2) maintenance records
      {
        car: createdCars[2]._id,
        driver: createdCars[2].driver,
        subCategories: [
          createdSubCategories[0]._id, // Oil Change
          createdSubCategories[2]._id, // Air Filter
          createdSubCategories[25]._id, // Fuel Filter
        ],
        description:
          "Routine maintenance - oil, air filter, and fuel filter change",
        const: 180,
        date: new Date("2024-09-05"),
      },
      {
        car: createdCars[2]._id,
        driver: createdCars[2].driver,
        subCategories: [
          createdSubCategories[17]._id, // Shock Absorbers
          createdSubCategories[18]._id, // Suspension Springs
        ],
        description: "Heavy-duty suspension upgrade - new shocks and springs",
        const: 650,
        date: new Date("2024-10-30"),
      },
      {
        car: createdCars[2]._id,
        driver: createdCars[2].driver,
        subCategories: [
          createdSubCategories[3]._id, // Timing Belt
          createdSubCategories[23]._id, // Water Pump
        ],
        description: "Major service - timing belt and water pump replacement",
        const: 520,
        date: new Date("2025-02-05"),
      },
      {
        car: createdCars[2]._id,
        driver: createdCars[2].driver,
        subCategories: [
          createdSubCategories[40]._id, // Rust Treatment
          createdSubCategories[39]._id, // Body Repair
        ],
        description: "Body work - rust removal and panel repair on truck bed",
        const: 420,
        date: new Date("2025-04-12"),
      },

      // Chevrolet Malibu (Car 3) maintenance records
      {
        car: createdCars[3]._id,
        driver: createdCars[3].driver,
        subCategories: [
          createdSubCategories[0]._id, // Oil Change
          createdSubCategories[1]._id, // Spark Plugs
        ],
        description:
          "Engine maintenance - oil change and spark plug replacement",
        const: 160,
        date: new Date("2024-09-18"),
      },
      {
        car: createdCars[3]._id,
        driver: createdCars[3].driver,
        subCategories: [
          createdSubCategories[9]._id, // Brake Pads
          createdSubCategories[11]._id, // Brake Fluid
        ],
        description:
          "Brake system service - front pads replacement and fluid change",
        const: 240,
        date: new Date("2024-11-15"),
      },
      {
        car: createdCars[3]._id,
        driver: createdCars[3].driver,
        subCategories: [createdSubCategories[26]._id], // Fuel Pump
        description: "Fuel pump replacement after diagnosis of starting issues",
        const: 380,
        date: new Date("2025-01-28"),
      },
      {
        car: createdCars[3]._id,
        driver: createdCars[3].driver,
        subCategories: [
          createdSubCategories[6]._id, // Clutch Repair
          createdSubCategories[8]._id, // Gearbox Repair
        ],
        description: "Transmission overhaul - clutch and gearbox repairs",
        const: 920,
        date: new Date("2025-03-25"),
      },
      {
        car: createdCars[3]._id,
        driver: createdCars[3].driver,
        subCategories: [
          createdSubCategories[36]._id, // Audio System
          createdSubCategories[34]._id, // Dashboard Repair
        ],
        description:
          "Interior updates - audio system replacement and dashboard repair",
        const: 340,
        date: new Date("2025-05-01"),
      },
    ];

    // Insert maintenance records
    const createdRecords = await Maintenance.insertMany(maintenanceRecords);

    console.log("\n--- MAINTENANCE RECORDS INSERTED ---");

    // Group maintenance records by car for better readability
    const maintenanceByCar = {};

    createdRecords.forEach((record) => {
      const carName = carMapping[record.car];
      const driverName = driverMapping[record.driver];

      if (!maintenanceByCar[carName]) {
        maintenanceByCar[carName] = [];
      }

      // Get subcategory names
      const subcats = record.subCategories
        .map((sc) => subcategoryMapping[sc].name)
        .join(", ");

      maintenanceByCar[carName].push({
        date: record.date.toLocaleDateString(),
        description: record.description,
        subcategories: subcats,
        cost: record.const,
        driver: driverName,
      });
    });

    // Display maintenance records grouped by car
    for (const [carName, records] of Object.entries(maintenanceByCar)) {
      console.log(`\nCar: ${carName}`);
      records.forEach((record, index) => {
        console.log(`  ${index + 1}. Date: ${record.date}`);
        console.log(`     Description: ${record.description}`);
        console.log(`     Service Types: ${record.subcategories}`);
        console.log(`     Cost: $${record.cost}`);
        console.log(`     Driver: ${record.driver}`);
      });
    }

    // Update cars with maintenance history
    for (const record of createdRecords) {
      await Car.findByIdAndUpdate(record.car, {
        $push: { maintenanceHistory: record._id },
      });
    }
    console.log("\nCars updated with maintenance history");

    console.log("\n--- DATABASE SEEDING COMPLETED SUCCESSFULLY! ---");
    console.log("Summary:");
    console.log(`- ${createdCategories.length} maintenance categories`);
    console.log(`- ${createdSubCategories.length} maintenance subcategories`);
    console.log(`- ${createdDrivers.length} drivers`);
    console.log(`- ${createdCars.length} cars`);
    console.log(`- ${createdRecords.length} maintenance records`);
    process.exit(0);
  } catch (error) {
    console.error("Error seeding database:", error);
    process.exit(1);
  }
};

seedData();
