{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Maintenance API",
        "version": "1.0.0",
        "description": "API documentation for Car Maintenance System",
        "contact": {
            "name": "API Support",
            "email": "support@carmaintenance.com"
        }
    },
    "servers": [
        {
            "url": "https://srv830738.hstgr.cloud/api",
            "description": "Production Server"
        },
        {
            "url": "http://localhost:3000/api",
            "description": "Development Server"
        }
    ],
    "tags": [
        {
            "name": "Cars",
            "description": "Car management endpoints"
        },
        {
            "name": "Drivers",
            "description": "Driver management endpoints"
        },
        {
            "name": "Maintenance",
            "description": "Maintenance record endpoints"
        },
        {
            "name": "Maintenance Requests",
            "description": "Maintenance request endpoints"
        },
        {
            "name": "Categories",
            "description": "Maintenance category endpoints"
        },
        {
            "name": "SubCategories",
            "description": "Maintenance subcategory endpoints"
        },
        {
            "name": "Car Meter",
            "description": "Car meter reading image analysis endpoints"
        },
        {
            "name": "Authentication",
            "description": "Driver authentication endpoints"
        },
        {
            "name": "Admin",
            "description": "Admin authentication and management endpoints"
        },
        {
            "name": "Receivers",
            "description": "Receiver management and maintenance request handling endpoints"
        },
        {
            "name": "Notifications",
            "description": "User notification management endpoints"
        }
    ],
    "paths": {
        "/cars": {
            "get": {
                "summary": "Get all cars",
                "tags": [ "Cars" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    } ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": { "type": "string" },
                        "description": "Search across plate number, brand, and model fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of cars",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 4
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Car"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new car",
                "tags": [ "Cars" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "summary": "Get a car by ID",
                "tags": [ "Cars" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CarDetailed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a car",
                "tags": [ "Cars" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a car",
                "tags": [ "Cars" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            } },
        "/cars/total": {
            "get": {
                "summary": "Get total number of cars",
                "tags": [ "Cars" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Returns the total count of cars in the system.",
                "responses": {
                    "200": {
                        "description": "Total number of cars retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "totalCars": {
                                            "type": "number",
                                            "example": 25
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Not logged in or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers": {
            "get": {
                "summary": "Get all drivers",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ], "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": { "type": "string" },
                        "description": "Search across name, phone number, license number, and national ID fields"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of drivers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 4
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Driver"
                                            }
                                        }
                                    }
                                } } }
                    }
                }
            }
        },
        "/drivers/create-driver": {
            "post": {
                "summary": "Create a new driver",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Creates a new driver. Requires admin authentication. All driver fields must be unique (phone number, national ID, license number).",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriverInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Driver created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Driver created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Validation error or duplicate fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Not logged in or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/me": {
            "get": {
                "summary": "Get current driver's profile and maintenance history",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Requires authentication as driver only. Returns the profile of the currently authenticated driver with their maintenance history.",
                "responses": {
                    "200": {
                        "description": "Driver profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "driver": {
                                                    "$ref": "#/components/schemas/Driver"
                                                },
                                                "maintenanceHistory": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Maintenance"
                                                    },
                                                    "description": "Maintenance history for the driver"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Not logged in or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Driver access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/{id}": {
            "get": {
                "summary": "Get a driver by ID",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a driver",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriverInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Driver updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a driver",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Driver deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/phone/{phoneNumber}": {
            "get": {
                "summary": "Get a driver by phone number",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "phoneNumber",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver's phone number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/{id}/maintenance": {
            "get": {
                "summary": "Get maintenance records for a driver",
                "tags": [ "Drivers", "Maintenance" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of maintenance records for the driver",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 3
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            } },
        "/drivers/total": {
            "get": {
                "summary": "Get total number of drivers",
                "tags": [ "Drivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Returns the total count of drivers in the system.",
                "responses": {
                    "200": {
                        "description": "Total number of drivers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "totalDrivers": {
                                            "type": "number",
                                            "example": 42
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Not logged in or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            } },
        "/maintenance": {
            "get": {
                "summary": "Get all maintenance records",
                "tags": [ "Maintenance" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Requires authentication as admin or driver.",
                "responses": {
                    "200": {
                        "description": "A list of maintenance records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 23
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }, "post": {
                "summary": "Create a new maintenance record",
                "tags": [ "Maintenance" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Creates a new maintenance record. Drivers should:\n\n1. **Get available subcategories**: Use `GET /subcategories/category/{categoryId}` to see maintenance types\n2. **Check custom fields**: Use `GET /subcategories/{id}/fields` for each selected subcategory to get required custom fields\n3. **Submit maintenance record**: Include responses to all required custom fields in `customFieldData` array\n\n**Custom Field Workflow:**\n- Each subcategory may have admin-defined custom fields (e.g., current mileage, tire condition)\n- Required fields must be provided or the request will fail\n- All field values are submitted as strings for flexibility\n- Field responses are linked to specific subcategories via `subcategoryId`",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceInput"
                            },
                            "examples": {
                                "basicMaintenance": {
                                    "summary": "Basic maintenance without custom fields",
                                    "description": "Simple maintenance record for subcategories with no custom fields",
                                    "value": {
                                        "car": "60d21b4667d0d8992e610c85",
                                        "driver": "60d21b4667d0d8992e610c86",
                                        "subCategories": [ "60d21b4667d0d8992e610c88" ],
                                        "description": "Basic oil change service",
                                        "cost": 50,
                                        "mechanicCost": 30
                                    }
                                },
                                "maintenanceWithCustomFields": {
                                    "summary": "Maintenance with required custom fields",
                                    "description": "Comprehensive maintenance record including driver responses to admin-defined custom fields",
                                    "value": {
                                        "car": "60d21b4667d0d8992e610c85",
                                        "driver": "60d21b4667d0d8992e610c86",
                                        "subCategories": [ "60d21b4667d0d8992e610c88", "60d21b4667d0d8992e610c89" ],
                                        "description": "Full service - oil change, tire rotation, and brake inspection",
                                        "cost": 180,
                                        "mechanicCost": 120,
                                        "customFieldData": [
                                            {
                                                "fieldName": "currentMileage",
                                                "fieldValue": "85000",
                                                "subcategoryId": "60d21b4667d0d8992e610c88"
                                            },
                                            {
                                                "fieldName": "tireCondition",
                                                "fieldValue": "Good - minimal wear",
                                                "subcategoryId": "60d21b4667d0d8992e610c89"
                                            },
                                            {
                                                "fieldName": "brakePadThickness",
                                                "fieldValue": "8mm",
                                                "subcategoryId": "60d21b4667d0d8992e610c89"
                                            }
                                        ]
                                    }
                                },
                                "multipleSubcategories": {
                                    "summary": "Multiple subcategories with mixed field requirements",
                                    "description": "Shows how to handle different subcategories where some have required fields and others don't",
                                    "value": {
                                        "car": "60d21b4667d0d8992e610c85",
                                        "driver": "60d21b4667d0d8992e610c86",
                                        "subCategories": [ "60d21b4667d0d8992e610c88", "60d21b4667d0d8992e610c90", "60d21b4667d0d8992e610c91" ],
                                        "description": "Comprehensive service including engine, transmission, and AC maintenance",
                                        "cost": 350,
                                        "mechanicCost": 250,
                                        "customFieldData": [
                                            {
                                                "fieldName": "engineMileage",
                                                "fieldValue": "87500",
                                                "subcategoryId": "60d21b4667d0d8992e610c88"
                                            },
                                            {
                                                "fieldName": "lastServiceDate",
                                                "fieldValue": "2024-12-15",
                                                "subcategoryId": "60d21b4667d0d8992e610c88"
                                            },
                                            {
                                                "fieldName": "transmissionFluidColor",
                                                "fieldValue": "Dark red, needs replacement",
                                                "subcategoryId": "60d21b4667d0d8992e610c90"
                                            },
                                            {
                                                "fieldName": "acRefrigerantLevel",
                                                "fieldValue": "Low",
                                                "subcategoryId": "60d21b4667d0d8992e610c91"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }, "responses": {
                    "201": {
                        "description": "Maintenance record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation errors for custom fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "missingRequiredField": {
                                        "summary": "Missing required custom field",
                                        "value": {
                                            "status": "error",
                                            "message": "Required custom field 'currentMileage' is missing for subcategory 'Engine Maintenance'"
                                        }
                                    },
                                    "invalidFieldName": {
                                        "summary": "Invalid field name provided",
                                        "value": {
                                            "status": "error",
                                            "message": "Custom field 'invalidField' does not exist for subcategory 'Engine Maintenance'"
                                        }
                                    },
                                    "missingSubcategoryId": {
                                        "summary": "Missing subcategory ID in custom field data",
                                        "value": {
                                            "status": "error",
                                            "message": "subcategoryId is required for custom field data"
                                        }
                                    },
                                    "subcategoryNotSelected": {
                                        "summary": "Custom field for unselected subcategory",
                                        "value": {
                                            "status": "error",
                                            "message": "Cannot provide custom field data for subcategory '60d21b4667d0d8992e610c99' that is not selected in subCategories array"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                },
                                "examples": {
                                    "carNotFound": {
                                        "summary": "Car not found",
                                        "value": {
                                            "status": "error",
                                            "message": "No car found with id: 60d21b4667d0d8992e610c85"
                                        }
                                    },
                                    "subcategoryNotFound": {
                                        "summary": "Subcategory not found",
                                        "value": {
                                            "status": "error",
                                            "message": "No subcategory found with id: 60d21b4667d0d8992e610c88"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance/{id}": {
            "get": {
                "summary": "Get a maintenance record by ID",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance record ID"
                    }
                ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Requires authentication as admin or driver.",
                "responses": {
                    "200": {
                        "description": "Maintenance record details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a maintenance record",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance record ID"
                    }
                ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Requires authentication as admin or driver.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Maintenance record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a maintenance record",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance record ID"
                    }
                ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Requires authentication as admin or driver.",
                "responses": {
                    "200": {
                        "description": "Maintenance record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance/car/{carId}": {
            "get": {
                "summary": "Get maintenance records for a specific car",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "carId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of maintenance records for the car",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 5
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            } },
        "/maintenance/cost": {
            "get": {
                "summary": "Get total maintenance costs",
                "tags": [ "Maintenance" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Returns the total maintenance cost and mechanic cost across all records.",
                "responses": {
                    "200": {
                        "description": "Total maintenance costs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totalCost": {
                                                    "type": "number",
                                                    "example": 15000
                                                },
                                                "totalMechanicCost": {
                                                    "type": "number",
                                                    "example": 8500
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Not logged in or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Get all maintenance categories",
                "tags": [ "Categories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin or driver.", "parameters": [
                    {
                        "in": "query",
                        "name": "search",
                        "schema": { "type": "string" },
                        "description": "Search by category name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of maintenance categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new maintenance category",
                "tags": [ "Categories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "summary": "Get a category by ID",
                "tags": [ "Categories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin or driver.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryDetailed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a category",
                "tags": [ "Categories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a category",
                "tags": [ "Categories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories": {
            "get": {
                "summary": "Get all subcategories",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin or driver.",
                "responses": {
                    "200": {
                        "description": "A list of subcategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 41
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new subcategory",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subcategory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories/{id}": {
            "get": {
                "summary": "Get a subcategory by ID",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin or driver.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a subcategory",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subcategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a subcategory",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            } },
        "/subcategories/category/{categoryId}": {
            "get": {
                "summary": "Get all subcategories for a specific category",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Requires authentication as admin or driver.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subcategories for the category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 4
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories/{id}/fields": { "get": {
                "summary": "Get custom fields for a subcategory",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "**Driver Workflow Step 2**: After selecting subcategories, drivers use this endpoint to discover what custom fields need to be filled out.\n\n**Usage for Drivers:**\n1. Call this endpoint for each selected subcategory\n2. Check which fields have `isRequired: true` - these MUST be included in maintenance request\n3. Optional fields (`isRequired: false`) can be included if relevant\n4. Use the `fieldName` and `subcategoryId` when submitting custom field data\n\n**Field Types:** All responses are submitted as strings, but fields may represent:\n- Numbers (mileage, measurements): `\"85000\"`\n- Dates: `\"2024-12-15\"` or `\"December 15, 2024\"`\n- Text descriptions: `\"Good condition, minimal wear\"`\n- Yes/No answers: `\"Yes\"` or `\"No\"`",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ], "responses": {
                    "200": {
                        "description": "Custom fields retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Custom fields retrieved successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "subcategoryName": {
                                                    "type": "string",
                                                    "example": "Engine Maintenance"
                                                },
                                                "customFields": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/CustomField"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "examples": {
                                    "engineMaintenance": {
                                        "summary": "Engine maintenance with mileage and condition check",
                                        "description": "Example response for engine maintenance subcategory with required mileage field and optional condition assessment",
                                        "value": {
                                            "status": "success",
                                            "message": "Custom fields retrieved successfully",
                                            "data": {
                                                "subcategoryName": "Engine Maintenance",
                                                "customFields": [
                                                    {
                                                        "_id": "60d21b4667d0d8992e610c90",
                                                        "fieldName": "current_mileage",
                                                        "description": "Current vehicle mileage for maintenance tracking",
                                                        "isRequired": true
                                                    },
                                                    {
                                                        "_id": "60d21b4667d0d8992e610c91",
                                                        "fieldName": "engine_condition",
                                                        "description": "General assessment of engine condition (e.g., Good, Fair, Poor)",
                                                        "isRequired": false
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "tireReplacement": {
                                        "summary": "Tire replacement with multiple required fields",
                                        "description": "Example showing tire replacement subcategory with multiple required custom fields",
                                        "value": {
                                            "status": "success",
                                            "message": "Custom fields retrieved successfully",
                                            "data": {
                                                "subcategoryName": "Tire Replacement",
                                                "customFields": [
                                                    {
                                                        "_id": "60d21b4667d0d8992e610c92",
                                                        "fieldName": "tire_position",
                                                        "description": "Which tire was replaced (Front Left, Front Right, Rear Left, Rear Right, All)",
                                                        "isRequired": true
                                                    },
                                                    {
                                                        "_id": "60d21b4667d0d8992e610c93",
                                                        "fieldName": "tire_brand",
                                                        "description": "Brand and model of the new tire",
                                                        "isRequired": true
                                                    },
                                                    {
                                                        "_id": "60d21b4667d0d8992e610c94",
                                                        "fieldName": "old_tire_condition",
                                                        "description": "Condition of the replaced tire",
                                                        "isRequired": false
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "noCustomFields": {
                                        "summary": "Subcategory with no custom fields",
                                        "description": "Example response when a subcategory has no custom fields defined",
                                        "value": {
                                            "status": "success",
                                            "message": "Custom fields retrieved successfully",
                                            "data": {
                                                "subcategoryName": "Basic Inspection",
                                                "customFields": [ ]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SubCategory not found"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add custom field to subcategory",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Add a new custom field to collect specific information from drivers",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Custom field added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Custom field added successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories/{id}/fields/{fieldId}": {
            "put": {
                "summary": "Update custom field",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Update an existing custom field in a subcategory",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    },
                    {
                        "in": "path",
                        "name": "fieldId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The custom field ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomFieldUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Custom field updated successfully"
                    }
                }
            },
            "delete": {
                "summary": "Remove custom field",
                "tags": [ "SubCategories" ],
                "security": [ { "bearerAuth": [ ] } ],
                "description": "Remove a custom field from a subcategory",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    },
                    {
                        "in": "path",
                        "name": "fieldId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The custom field ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Custom field removed successfully"
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new driver",
                "tags": [ "Authentication" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Driver registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "driver": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error or driver already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Log in a driver",
                "tags": [ "Authentication" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt.token.here"
                                        },
                                        "driver": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing phone number or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - incorrect phone number or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    } }
            }
        },
        "/auth/delete-account": {
            "delete": {
                "summary": "Delete user account permanently",
                "tags": [ "Authentication" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted permanently",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account deleted permanently"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - authentication required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/register": {
            "post": {
                "summary": "Register a new admin",
                "tags": [ "Admin" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminRegisterInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "admin": {
                                                    "$ref": "#/components/schemas/Admin"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error or admin already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "summary": "Log in an admin",
                "tags": [ "Admin" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminLoginInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "admin": {
                                                    "$ref": "#/components/schemas/Admin"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - incorrect email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin": {
            "get": {
                "summary": "Get all admins",
                "tags": [ "Admin" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of admins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 2
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "admins": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Admin"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/{id}": {
            "get": {
                "summary": "Get an admin by ID",
                "tags": [ "Admin" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The admin ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "admin": {
                                                    "$ref": "#/components/schemas/Admin"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update an admin",
                "tags": [ "Admin" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The admin ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AdminUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Admin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin updated successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "admin": {
                                                    "$ref": "#/components/schemas/Admin"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deactivate an admin",
                "tags": [ "Admin" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The admin ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin deactivated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin access required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Admin not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car-meter/analyze": {
            "post": {
                "summary": "Analyze a car meter image",
                "tags": [ "Car Meter" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "meterImage": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Image file of car meter"
                                    }
                                },
                                "required": [ "meterImage" ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image analyzed successfully and meter reading updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "meterReading": {
                                                    "$ref": "#/components/schemas/MeterReading/properties/meterReading"
                                                },
                                                "imagePath": {
                                                    "type": "string",
                                                    "example": "/uploads/1621234567890.jpg"
                                                },
                                                "updatedCar": {
                                                    "$ref": "#/components/schemas/Car"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request, missing image, or driver has no car assigned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed - missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to analyze image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car-meter/update-driver-reading": {
            "post": {
                "summary": "Update a car with driver meter reading",
                "tags": [ "Car Meter" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeterUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car meter reading updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car meter reading updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication failed - missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance-requests": {
            "get": {
                "summary": "Get maintenance requests",
                "tags": [ "Maintenance Requests" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get all maintenance requests. Accessible by admin and drivers.",
                "responses": {
                    "200": {
                        "description": "A list of maintenance requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MaintenanceRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new maintenance request",
                "tags": [ "Maintenance Requests" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Create a new maintenance request. Accessible by drivers only.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceRequestInput"
                            },
                            "example": {
                                "car": "60d21b4667d0d8992e610c85",
                                "subCategories": [ "60d21b4667d0d8992e610c88" ],
                                "description": "Oil change and tire rotation needed",
                                "customFieldData": [
                                    {
                                        "fieldName": "currentMileage",
                                        "fieldValue": "25000",
                                        "subcategoryId": "60d21b4667d0d8992e610c88"
                                    },
                                    {
                                        "fieldName": "lastServiceDate",
                                        "fieldValue": "2024-01-15",
                                        "subcategoryId": "60d21b4667d0d8992e610c88"
                                    },
                                    {
                                        "fieldName": "engineCondition",
                                        "fieldValue": "Good condition, no issues reported",
                                        "subcategoryId": "60d21b4667d0d8992e610c88"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Maintenance request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance request created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MaintenanceRequest"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance-requests/my": {
            "get": {
                "summary": "Get my maintenance requests",
                "tags": [ "Maintenance Requests" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get maintenance requests for the authenticated driver.",
                "responses": {
                    "200": {
                        "description": "Driver's maintenance requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 5
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MaintenanceRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance-requests/{id}": {
            "get": {
                "summary": "Get a maintenance request by ID",
                "tags": [ "Maintenance Requests" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance request ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance request details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MaintenanceRequest"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance-requests/{requestId}/upload-receipt": {
            "patch": {
                "summary": "Upload receipt for maintenance request",
                "tags": [ "Maintenance Requests" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance request ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiptImage": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Receipt image file"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Receipt uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Receipt uploaded successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance-requests/{requestId}/complete": {
            "patch": {
                "summary": "Complete a maintenance request",
                "tags": [ "Maintenance Requests" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Mark a maintenance request as completed. Admin only.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance request ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance request completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance request completed successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/my": {
            "get": {
                "summary": "Get my notifications",
                "tags": [ "Notifications" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get all notifications for the authenticated user.",
                "responses": {
                    "200": {
                        "description": "User's notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 12
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Notification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/stats": {
            "get": {
                "summary": "Get notification statistics",
                "tags": [ "Notifications" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get notification statistics for the authenticated user.",
                "responses": {
                    "200": {
                        "description": "Notification statistics",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totalNotifications": {
                                                    "type": "number",
                                                    "example": 25
                                                },
                                                "unreadNotifications": {
                                                    "type": "number",
                                                    "example": 5
                                                },
                                                "readNotifications": {
                                                    "type": "number",
                                                    "example": 20
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/mark-all-read": {
            "patch": {
                "summary": "Mark all notifications as read",
                "tags": [ "Notifications" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Mark all notifications as read for the authenticated user.",
                "responses": {
                    "200": {
                        "description": "All notifications marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All notifications marked as read"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{notificationId}/read": {
            "patch": {
                "summary": "Mark a notification as read",
                "tags": [ "Notifications" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "notificationId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The notification ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications/{notificationId}": {
            "delete": {
                "summary": "Delete a notification",
                "tags": [ "Notifications" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "notificationId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The notification ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receivers": {
            "get": {
                "summary": "Get all receivers",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get all receivers. Admin access required.",
                "responses": {
                    "200": {
                        "description": "A list of receivers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 5
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Receiver"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new receiver",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Create a new receiver. Admin access required.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReceiverInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Receiver created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Receiver created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Receiver"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receivers/login": {
            "post": {
                "summary": "Log in a receiver",
                "tags": [ "Receivers" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/LoginInput" }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Receiver logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": { "type": "string", "example": "success" },
                                        "token": { "type": "string", "example": "eyJhbGciOi..." },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "receiver": { "$ref": "#/components/schemas/Receiver" }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing phone number or password",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/Error" }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - incorrect phone number or password",
                        "content": {
                            "application/json": {
                                "schema": { "$ref": "#/components/schemas/Error" }
                            }
                        }
                    }
                }
            }
        },
        "/receivers/me": {
            "get": {
                "summary": "Get current receiver profile",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get the authenticated receiver's profile.",
                "responses": {
                    "200": {
                        "description": "Receiver profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Receiver"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receivers/pending-requests": {
            "get": {
                "summary": "Get pending maintenance requests",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get all pending maintenance requests for the receiver.",
                "responses": {
                    "200": {
                        "description": "Pending maintenance requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 8
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MaintenanceRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receivers/accepted-requests": {
            "get": {
                "summary": "Get accepted maintenance requests",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "description": "Get all accepted maintenance requests for the receiver.",
                "responses": {
                    "200": {
                        "description": "Accepted maintenance requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 3
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MaintenanceRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receivers/requests/{requestId}/accept": {
            "patch": {
                "summary": "Accept a maintenance request",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance request ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance request accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance request accepted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/receivers/requests/{requestId}/reject": {
            "patch": {
                "summary": "Reject a maintenance request",
                "tags": [ "Receivers" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "requestId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance request ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "rejectionMessage": {
                                        "type": "string",
                                        "example": "Not enough capacity for this maintenance"
                                    }
                                },
                                "required": [ "rejectionMessage" ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Maintenance request rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance request rejected successfully"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "Car": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string", "example": "60d21b4667d0d8992e610c85" },
                    "plateNumber": { "type": "string", "example": "ABC1234" },
                    "brand": { "type": "string", "example": "Toyota" },
                    "model": { "type": "string", "example": "Camry" },
                    "year": { "type": "number", "example": 2020 },
                    "color": { "type": "string", "example": "Silver" },
                    "driver": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Driver" }
                    },
                    "status": { "type": "string", "enum": [ "available", "in_use", "maintenance" ], "example": "available" },
                    "meterReading": { "type": "number", "example": 195359 },
                    "lastMeterUpdate": { "type": "string", "format": "date-time" },
                    "maintenanceHistory": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Maintenance" }
                    },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" }
                }
            },
            "CarDetailed": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "ABC1234"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Camry"
                    },
                    "year": {
                        "type": "number",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "Silver"
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "available", "in_use", "maintenance" ],
                        "example": "available"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/Driver"
                    },
                    "maintenanceHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Maintenance"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CarInput": {
                "type": "object",
                "properties": {
                    "plateNumber": {
                        "type": "string",
                        "example": "ABC1234"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Camry"
                    },
                    "year": {
                        "type": "number",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "Silver"
                    },
                    "driver": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "available", "in_use", "maintenance" ],
                        "example": "available"
                    }
                },
                "required": [ "plateNumber", "brand", "model", "year", "color" ]
            },
            "Driver": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string", "example": "60d21b4667d0d8992e610c86" },
                    "name": { "type": "string", "example": "Ahmed Mohammed" },
                    "phoneNumber": { "type": "string", "example": "111-222-4444" },
                    "nationalId": { "type": "string", "example": "AND123456" },
                    "licenseNumber": { "type": "string", "example": "CD98765" },
                    "car": { "type": "string", "example": "60d21b4667d0d8992e610c85" },
                    "role": { "type": "string", "enum": [ "driver", "admin" ], "example": "driver" }
                }
            },
            "DriverInput": {
                "type": "object",
                "properties": {
                    "name": { "type": "string", "example": "John Smith" },
                    "password": { "type": "string", "example": "password123" },
                    "phoneNumber": { "type": "string", "example": "123-456-7890" },
                    "nationalId": { "type": "string", "example": "ABC123456" },
                    "licenseNumber": { "type": "string", "example": "DL98765" },
                    "address": { "type": "string", "example": "123 Main St, Anytown" },
                    "car": { "type": "string", "example": "60d21b4667d0d8992e610c85" }
                },
                "required": [ "name", "password", "phoneNumber", "nationalId", "licenseNumber", "address" ]
            }, "Maintenance": {
                "type": "object",
                "properties": {
                    "_id": { "type": "string", "example": "60d21b4667d0d8992e610c87" },
                    "car": { "$ref": "#/components/schemas/Car" },
                    "driver": { "$ref": "#/components/schemas/Driver" },
                    "subCategories": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/SubCategory" }
                    },
                    "description": { "type": "string", "example": "Replace engine air filter" },
                    "cost": { "type": "number", "example": 120 },
                    "mechanicCost": { "type": "number", "example": 80 },
                    "customFieldData": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/CustomFieldData" },
                        "description": "Driver's responses to custom fields"
                    },
                    "date": { "type": "string", "format": "date-time" },
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" }
                }
            }, "MaintenanceInput": {
                "type": "object",
                "properties": {
                    "car": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "driver": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c86"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "60d21b4667d0d8992e610c88"
                        }
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular maintenance - oil change and air filter replacement"
                    },
                    "cost": {
                        "type": "number",
                        "example": 120,
                        "description": "Total cost for the maintenance operation"
                    },
                    "mechanicCost": {
                        "type": "number",
                        "example": 80,
                        "description": "Labor cost for the mechanic"
                    },
                    "customFieldData": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldData"
                        },
                        "description": "Driver's responses to admin-defined custom fields"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [ "car", "driver", "subCategories", "cost", "mechanicCost" ]
            },
            "Category": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c89"
                    },
                    "name": {
                        "type": "string",
                        "example": "Engine"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "60d21b4667d0d8992e610c88"
                        }
                    }
                }
            },
            "CategoryDetailed": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c89"
                    },
                    "name": {
                        "type": "string",
                        "example": "Engine"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    }
                }
            },
            "CategoryInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Engine"
                    }
                },
                "required": [ "name" ]
            }, "SubCategory": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c88"
                    },
                    "name": {
                        "type": "string",
                        "example": "Engine Maintenance"
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular engine maintenance and service"
                    },
                    "category": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "60d21b4667d0d8992e610c89"
                            },
                            {
                                "$ref": "#/components/schemas/Category"
                            }
                        ]
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        },
                        "description": "Admin-defined fields to collect specific information from drivers"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SubCategoryInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Engine Maintenance"
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular engine maintenance and service"
                    },
                    "category": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c89"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomFieldInput"
                        },
                        "description": "Optional custom fields to define at creation"
                    }
                },
                "required": [ "name", "description", "category" ]
            }, "CustomField": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c90"
                    },
                    "fieldName": {
                        "type": "string",
                        "example": "mileage"
                    },
                    "description": {
                        "type": "string",
                        "example": "Current vehicle mileage for maintenance tracking"
                    },
                    "isRequired": {
                        "type": "boolean",
                        "example": true
                    }
                }
            }, "CustomFieldInput": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "example": "mileage"
                    },
                    "description": {
                        "type": "string",
                        "example": "Current vehicle mileage for maintenance tracking"
                    },
                    "isRequired": {
                        "type": "boolean",
                        "example": true,
                        "default": false
                    }
                },
                "required": [ "fieldName", "description" ]
            }, "CustomFieldUpdateInput": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "Updated description of what we need from driver"
                    },
                    "isRequired": {
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "CustomFieldData": {
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string",
                        "example": "currentMileage",
                        "description": "The field name from the subcategory's custom fields"
                    },
                    "fieldValue": {
                        "type": "string",
                        "example": "85000",
                        "description": "Driver's response as string (flexible for any input type)"
                    },
                    "subcategoryId": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c88",
                        "description": "ID of the subcategory this field belongs to"
                    }
                },
                "required": [ "fieldName", "fieldValue", "subcategoryId" ]
            },
            "Error": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found"
                    }
                }
            },
            "MeterReading": {
                "type": "object",
                "properties": {
                    "meterReading": {
                        "type": "object",
                        "properties": {
                            "rawText": {
                                "type": "string",
                                "example": "123456 km\nOil Check\nService Due: 5000 km"
                            },
                            "possibleReadings": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "example": "123456"
                                        },
                                        "context": {
                                            "type": "string",
                                            "example": "123456 km"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "imagePath": {
                        "type": "string",
                        "example": "/uploads/1621234567890.jpg"
                    }
                }
            },
            "MeterUpdateInput": {
                "type": "object",
                "properties": {
                    "meterReading": {
                        "type": "number",
                        "example": 123456
                    }
                },
                "required": [ "meterReading" ]
            },
            "RegisterInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Smith"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123",
                        "minLength": 8
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "nationalId": {
                        "type": "string",
                        "example": "ABC123456"
                    },
                    "licenseNumber": {
                        "type": "string",
                        "example": "DL98765"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, Anytown"
                    }
                },
                "required": [ "name", "password", "phoneNumber", "nationalId", "licenseNumber", "address" ]
            },
            "LoginInput": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "required": [ "phoneNumber", "password" ]
            },
            "Admin": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "hashedpassword"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-15T10:30:00.000Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-06-15T10:30:00.000Z"
                    }
                }
            },
            "AdminRegisterInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123",
                        "minLength": 8
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    }
                },
                "required": [ "name", "email", "password", "phoneNumber" ]
            },
            "AdminLoginInput": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "required": [ "email", "password" ]
            },
            "AdminUpdateInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "admin@example.com"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "isActive": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "MaintenanceRequest": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/Driver"
                    },
                    "car": {
                        "$ref": "#/components/schemas/Car"
                    },
                    "receiver": {
                        "$ref": "#/components/schemas/Receiver"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    },
                    "description": {
                        "type": "string",
                        "example": "Oil change and tire rotation needed"
                    },
                    "customFieldData": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fieldName": {
                                    "type": "string",
                                    "example": "currentMileage"
                                },
                                "fieldValue": {
                                    "type": "string",
                                    "example": "25000"
                                },
                                "subcategoryId": {
                                    "type": "string",
                                    "example": "60d21b4667d0d8992e610c88"
                                }
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "open", "accepted", "rejected", "underReview", "completed" ],
                        "example": "open"
                    },
                    "rejectionMessage": {
                        "type": "string",
                        "example": "Not enough capacity for this maintenance"
                    },
                    "receiptImage": {
                        "type": "string",
                        "example": "uploads/receipt_12345.jpg"
                    },
                    "cost": {
                        "type": "number",
                        "example": 150
                    },
                    "mechanicCost": {
                        "type": "number",
                        "example": 100
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-15T08:30:00Z"
                    }
                }
            },
            "MaintenanceRequestInput": {
                "type": "object",
                "properties": {
                    "car": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": [ "60d21b4667d0d8992e610c88", "60d21b4667d0d8992e610c89" ]
                    },
                    "description": {
                        "type": "string",
                        "example": "Oil change and tire rotation needed"
                    },
                    "customFieldData": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fieldName": {
                                    "type": "string",
                                    "example": "currentMileage"
                                },
                                "fieldValue": {
                                    "type": "string",
                                    "example": "25000"
                                },
                                "subcategoryId": {
                                    "type": "string",
                                    "example": "60d21b4667d0d8992e610c88"
                                }
                            }
                        }
                    }
                },
                "required": [ "car", "subCategories", "description" ]
            },

            "Notification": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "recipient": {
                        "$ref": "#/components/schemas/Driver"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/Driver"
                    },
                    "type": {
                        "type": "string",
                        "enum": [ "maintenance_request", "request_accepted", "request_rejected", "maintenance_completed" ],
                        "example": "maintenance_request"
                    },
                    "title": {
                        "type": "string",
                        "example": "New Maintenance Request"
                    },
                    "message": {
                        "type": "string",
                        "example": "A new maintenance request has been submitted for your car."
                    },
                    "isRead": {
                        "type": "boolean",
                        "example": false
                    },
                    "relatedRequest": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c90"
                    },
                    "relatedMaintenance": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c91"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-15T08:30:00Z"
                    }
                }
            },
            "Receiver": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "name": {
                        "type": "string",
                        "example": "Ahmed's Auto Shop"
                    },
                    "email": {
                        "type": "string",
                        "example": "ahmed@autoshop.com"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-15T08:30:00Z"
                    }
                }
            },
            "ReceiverInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Ahmed's Auto Shop"
                    },
                    "email": {
                        "type": "string",
                        "example": "ahmed@autoshop.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "+1234567890"
                    }

                },
                "required": [ "name", "email", "password", "phoneNumber" ]
            }
        }
    }
}