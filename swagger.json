{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Maintenance API",
        "version": "1.0.0",
        "description": "API documentation for Car Maintenance System",
        "contact": {
            "name": "API Support",
            "email": "support@carmaintenance.com"
        }
    },
    "servers": [
        {
        "url": "https://srv830738.hstgr.cloud/api",
        "description": "Production Server"
        }
    ],
    "tags": [
        {
            "name": "Cars",
            "description": "Car management endpoints"
        },
        {
            "name": "Drivers",
            "description": "Driver management endpoints"
        },
        {
            "name": "Maintenance",
            "description": "Maintenance record endpoints"
        },
        {
            "name": "Categories",
            "description": "Maintenance category endpoints"
        },
        {
            "name": "SubCategories",
            "description": "Maintenance subcategory endpoints"
        },
        {
            "name": "Car Meter",
            "description": "Car meter reading image analysis endpoints"
        }
    ],
    "paths": {
        "/cars": {
            "get": {
                "summary": "Get all cars",
                "tags": [ "Cars" ],
                "responses": {
                    "200": {
                        "description": "A list of cars",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 4
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Car"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new car",
                "tags": [ "Cars" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cars/{id}": {
            "get": {
                "summary": "Get a car by ID",
                "tags": [ "Cars" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CarDetailed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a car",
                "tags": [ "Cars" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CarInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a car",
                "tags": [ "Cars" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers": {
            "get": {
                "summary": "Get all drivers",
                "tags": [ "Drivers" ],
                "responses": {
                    "200": {
                        "description": "A list of drivers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 4
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Driver"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Register a new driver",
                "tags": [ "Drivers" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriverInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Driver registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Driver registered successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/{id}": {
            "get": {
                "summary": "Get a driver by ID",
                "tags": [ "Drivers" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a driver",
                "tags": [ "Drivers" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DriverInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Driver updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Driver updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a driver",
                "tags": [ "Drivers" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Driver deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/phone/{phoneNumber}": {
            "get": {
                "summary": "Get a driver by phone number",
                "tags": [ "Drivers" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "phoneNumber",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver's phone number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Driver details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Driver"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/drivers/{id}/maintenance": {
            "get": {
                "summary": "Get maintenance records for a driver",
                "tags": [ "Drivers", "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The driver ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of maintenance records for the driver",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 3
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Driver not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance": {
            "get": {
                "summary": "Get all maintenance records",
                "tags": [ "Maintenance" ],
                "responses": {
                    "200": {
                        "description": "A list of maintenance records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 23
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new maintenance record",
                "tags": [ "Maintenance" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Maintenance record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance/{id}": {
            "get": {
                "summary": "Get a maintenance record by ID",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance record ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance record details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a maintenance record",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance record ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MaintenanceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Maintenance record updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a maintenance record",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The maintenance record ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance record deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Maintenance record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/maintenance/car/{carId}": {
            "get": {
                "summary": "Get maintenance records for a specific car",
                "tags": [ "Maintenance" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "carId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The car ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of maintenance records for the car",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 5
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "summary": "Get all maintenance categories",
                "tags": [ "Categories" ],
                "responses": {
                    "200": {
                        "description": "A list of maintenance categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 10
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new maintenance category",
                "tags": [ "Categories" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "summary": "Get a category by ID",
                "tags": [ "Categories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CategoryDetailed"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a category",
                "tags": [ "Categories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a category",
                "tags": [ "Categories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories": {
            "get": {
                "summary": "Get all subcategories",
                "tags": [ "SubCategories" ],
                "responses": {
                    "200": {
                        "description": "A list of subcategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 41
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new subcategory",
                "tags": [ "SubCategories" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subcategory created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories/{id}": {
            "get": {
                "summary": "Get a subcategory by ID",
                "tags": [ "SubCategories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update a subcategory",
                "tags": [ "SubCategories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubCategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subcategory updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SubCategory"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a subcategory",
                "tags": [ "SubCategories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The subcategory ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subcategories/category/{categoryId}": {
            "get": {
                "summary": "Get all subcategories for a specific category",
                "tags": [ "SubCategories" ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "The category ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subcategories for the category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "results": {
                                            "type": "number",
                                            "example": 4
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car-meter/analyze": {
            "post": {
                "summary": "Analyze a car meter image",
                "tags": [ "Car Meter" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "meterImage": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Image file of car meter"
                                    }
                                },
                                "required": [ "meterImage" ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image analyzed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MeterReading"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to analyze image",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/car-meter/update-reading": {
            "post": {
                "summary": "Update a car with meter reading",
                "tags": [ "Car Meter" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeterUpdateInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car meter reading updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Car meter reading updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Car"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Car not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Car": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "ABC1234"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Camry"
                    },
                    "year": {
                        "type": "number",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "Silver"
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "available", "in_use", "maintenance" ],
                        "example": "available"
                    },
                    "meterReading": {
                        "type": "number",
                        "example": 123456
                    },
                    "lastMeterUpdate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CarDetailed": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "plateNumber": {
                        "type": "string",
                        "example": "ABC1234"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Camry"
                    },
                    "year": {
                        "type": "number",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "Silver"
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "available", "in_use", "maintenance" ],
                        "example": "available"
                    },
                    "driver": {
                        "$ref": "#/components/schemas/Driver"
                    },
                    "maintenanceHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Maintenance"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CarInput": {
                "type": "object",
                "properties": {
                    "plateNumber": {
                        "type": "string",
                        "example": "ABC1234"
                    },
                    "brand": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "model": {
                        "type": "string",
                        "example": "Camry"
                    },
                    "year": {
                        "type": "number",
                        "example": 2020
                    },
                    "color": {
                        "type": "string",
                        "example": "Silver"
                    },
                    "driver": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "available", "in_use", "maintenance" ],
                        "example": "available"
                    }
                },
                "required": [ "plateNumber", "brand", "model", "year", "color" ]
            },
            "Driver": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c86"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Smith"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "nationalId": {
                        "type": "string",
                        "example": "ABC123456"
                    },
                    "licenseNumber": {
                        "type": "string",
                        "example": "DL98765"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, Anytown"
                    },
                    "car": {
                        "$ref": "#/components/schemas/Car"
                    }
                }
            },
            "DriverInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Smith"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "nationalId": {
                        "type": "string",
                        "example": "ABC123456"
                    },
                    "licenseNumber": {
                        "type": "string",
                        "example": "DL98765"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, Anytown"
                    },
                    "car": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    }
                },
                "required": [ "name", "phoneNumber", "nationalId", "licenseNumber", "address" ]
            },
            "Maintenance": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c87"
                    },
                    "car": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "60d21b4667d0d8992e610c85"
                            },
                            {
                                "$ref": "#/components/schemas/Car"
                            }
                        ]
                    },
                    "driver": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "60d21b4667d0d8992e610c86"
                            },
                            {
                                "$ref": "#/components/schemas/Driver"
                            }
                        ]
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "example": "60d21b4667d0d8992e610c88"
                                },
                                {
                                    "$ref": "#/components/schemas/SubCategory"
                                }
                            ]
                        }
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular maintenance - oil change and air filter replacement"
                    },
                    "const": {
                        "type": "number",
                        "example": 120
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "MaintenanceInput": {
                "type": "object",
                "properties": {
                    "car": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "driver": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c86"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "60d21b4667d0d8992e610c88"
                        }
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular maintenance - oil change and air filter replacement"
                    },
                    "const": {
                        "type": "number",
                        "example": 120
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [ "car", "driver", "subCategories", "const" ]
            },
            "Category": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c89"
                    },
                    "name": {
                        "type": "string",
                        "example": "Engine"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "60d21b4667d0d8992e610c88"
                        }
                    }
                }
            },
            "CategoryDetailed": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c89"
                    },
                    "name": {
                        "type": "string",
                        "example": "Engine"
                    },
                    "subCategories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SubCategory"
                        }
                    }
                }
            },
            "CategoryInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Engine"
                    }
                },
                "required": [ "name" ]
            },
            "SubCategory": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c88"
                    },
                    "name": {
                        "type": "string",
                        "example": "Oil Change"
                    },
                    "category": {
                        "oneOf": [
                            {
                                "type": "string",
                                "example": "60d21b4667d0d8992e610c89"
                            },
                            {
                                "$ref": "#/components/schemas/Category"
                            }
                        ]
                    },
                    "cost": {
                        "type": "number",
                        "example": 50,
                        "description": "Standard cost for mechanic service"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SubCategoryInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Oil Change"
                    },
                    "category": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c89"
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular oil and filter change"
                    }
                },
                "required": [ "name", "description", "category" ]
            },
            "Error": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "Resource not found"
                    }
                }
            },
            "MeterReading": {
                "type": "object",
                "properties": {
                    "meterReading": {
                        "type": "object",
                        "properties": {
                            "rawText": {
                                "type": "string",
                                "example": "123456 km\nOil Check\nService Due: 5000 km"
                            },
                            "possibleReadings": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "value": {
                                            "type": "string",
                                            "example": "123456"
                                        },
                                        "context": {
                                            "type": "string",
                                            "example": "123456 km"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "imagePath": {
                        "type": "string",
                        "example": "/uploads/1621234567890.jpg"
                    }
                }
            },
            "MeterUpdateInput": {
                "type": "object",
                "properties": {
                    "carId": {
                        "type": "string",
                        "example": "60d21b4667d0d8992e610c85"
                    },
                    "meterReading": {
                        "type": "number",
                        "example": 123456
                    }
                },
                "required": [ "carId", "meterReading" ]
            }
        }
    }
}